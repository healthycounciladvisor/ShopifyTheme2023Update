// Event wrapper.
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

// Contexts.
@mixin when-inside($selector) {
  #{$selector} & {
    @content;
  }
}

// Opacity.
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Font size.
@function calculateRem($size) {
  $remSize: $size / 14px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// Background image.
$image-path: '{{ asset_url }}' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
  background-image: url( #{'{{ "#{$name}.svg" | asset_url }}'} );
  @if($size){
    background-size: $size;
  }
  .no-svg &{
    background-image: url( #{'{{ "#{$name}.#{$fallback-extension}" | asset_url }}'} );

    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url( #{'{{ "#{$name}#{$retina-suffix}.#{$fallback-extension}" | asset_url }}'} );
    }
  }
}

// Clearfix.
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Animations and keyframes.
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// Fonts.
@mixin font-file($asset-font-name) {
  src: url('{{ "#{$asset-font-name}.eot" | asset_url }}');
  src: url('{{ "#{$asset-font-name}.eot" | asset_url }}?#iefix') format("embedded-opentype"),
url('{{ "#{$asset-font-name}.woff" | asset_url }}') format("woff"),
url('{{ "#{$asset-font-name}.ttf" | asset_url }}') format("truetype"),
url('{{ "#{$asset-font-name}.svg" | asset_url }}') format("svg");
}
